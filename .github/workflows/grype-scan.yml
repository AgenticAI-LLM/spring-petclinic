name: Security Pipeline (Grype + SBOM + Semgrep + CodeQL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/spring-petclinic-fat
      IMAGE_TAG: latest

    steps:
      # -------------------
      # Checkout and Build
      # -------------------
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build JAR
        run: ./mvnw package -DskipTests -Dcheckstyle.skip

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      # -------------------
      # Push to Docker Hub
      # -------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        run: docker push $IMAGE_NAME:$IMAGE_TAG

      # -------------------
      # Grype CVE + SBOM
      # -------------------
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate CVE Report
        run: grype $IMAGE_NAME:$IMAGE_TAG -o table > grype-report.txt

      - name: Generate SBOM (CycloneDX)
        run: grype $IMAGE_NAME:$IMAGE_TAG -o cyclonedx > grype-sbom.json

      - name: Upload CVE Report
        uses: actions/upload-artifact@v4
        with:
          name: grype-cve-report
          path: grype-report.txt

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: grype-sbom
          path: grype-sbom.json

      # -------------------
      # SAST with Semgrep
      # -------------------
      - name: Run Semgrep (SAST)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }} # optional, for cloud dashboard

  # -------------------
  # CodeQL SAST (fixed to v3)
  # -------------------
  codeql:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
